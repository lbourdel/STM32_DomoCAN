; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\interrupt.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\interrupt.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 -Otime --diag_suppress=9931 -I.\Inc -I.\System_Files -I.\RTE\_NucleoF446xx -ID:\Users\Laurent\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -ID:\Users\Laurent\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.14.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=529 -D_RTE_ -DSTM32F446xx -D_DEBUG -DUSE_HAL_CAN_REGISTER_CALLBACKS --omf_browse=.\objects\interrupt.crf Src\interrupt.c]
                          THUMB

                          AREA ||i.EXTI0_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI0_IRQHandler PROC
;;;151     */
;;;152    void EXTI0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;153    {	
;;;154    	if ((EXTI->PR & EXTI_PR_PR0) != 0)
000002  4808              LDR      r0,|L1.36|
000004  6800              LDR      r0,[r0,#0]
000006  f0000001          AND      r0,r0,#1
00000a  b148              CBZ      r0,|L1.32|
;;;155    	{
;;;156    		EXTI_callback[0](EXTI_PR_PR0);
00000c  4806              LDR      r0,|L1.40|
00000e  6801              LDR      r1,[r0,#0]  ; EXTI_callback
000010  2001              MOVS     r0,#1
000012  4788              BLX      r1
;;;157    		
;;;158    		EXTI->PR |= EXTI_PR_PR0; // Clear EXTI0 pending interrupt
000014  4803              LDR      r0,|L1.36|
000016  6800              LDR      r0,[r0,#0]
000018  f0400001          ORR      r0,r0,#1
00001c  4901              LDR      r1,|L1.36|
00001e  6008              STR      r0,[r1,#0]
                  |L1.32|
;;;159    	}
;;;160    }
000020  bd10              POP      {r4,pc}
;;;161    
                          ENDP

000022  0000              DCW      0x0000
                  |L1.36|
                          DCD      0x40013c14
                  |L1.40|
                          DCD      EXTI_callback

                          AREA ||i.EXTI15_10_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI15_10_IRQHandler PROC
;;;253     */
;;;254    void EXTI15_10_IRQHandler(void){
000000  b510              PUSH     {r4,lr}
;;;255    	int i;
;;;256    	
;;;257    	for(i=10;i<=15;i++){
000002  240a              MOVS     r4,#0xa
000004  e014              B        |L2.48|
                  |L2.6|
;;;258    		if ((EXTI->PR & (0x1U << i)) != 0)
000006  480c              LDR      r0,|L2.56|
000008  6800              LDR      r0,[r0,#0]
00000a  2101              MOVS     r1,#1
00000c  40a1              LSLS     r1,r1,r4
00000e  4008              ANDS     r0,r0,r1
000010  b168              CBZ      r0,|L2.46|
;;;259    		{
;;;260    			// Code TODO
;;;261    			EXTI_callback[i]((0x1U << i));
000012  2201              MOVS     r2,#1
000014  fa02f004          LSL      r0,r2,r4
000018  4a08              LDR      r2,|L2.60|
00001a  f8521024          LDR      r1,[r2,r4,LSL #2]
00001e  4788              BLX      r1
;;;262    			
;;;263    			EXTI->PR |= (0x1U << i); // Clear EXTI0 pending interrupt
000020  4805              LDR      r0,|L2.56|
000022  6800              LDR      r0,[r0,#0]
000024  2101              MOVS     r1,#1
000026  40a1              LSLS     r1,r1,r4
000028  4308              ORRS     r0,r0,r1
00002a  4903              LDR      r1,|L2.56|
00002c  6008              STR      r0,[r1,#0]
                  |L2.46|
00002e  1c64              ADDS     r4,r4,#1              ;257
                  |L2.48|
000030  2c0f              CMP      r4,#0xf               ;257
000032  dde8              BLE      |L2.6|
;;;264    		}
;;;265    	}	
;;;266    }
000034  bd10              POP      {r4,pc}
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
                          DCD      0x40013c14
                  |L2.60|
                          DCD      EXTI_callback

                          AREA ||i.EXTI1_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI1_IRQHandler PROC
;;;166     */
;;;167    void EXTI1_IRQHandler(void){
000000  b510              PUSH     {r4,lr}
;;;168    	
;;;169    	if ((EXTI->PR & EXTI_PR_PR1) != 0)
000002  4808              LDR      r0,|L3.36|
000004  6800              LDR      r0,[r0,#0]
000006  f0000002          AND      r0,r0,#2
00000a  b148              CBZ      r0,|L3.32|
;;;170    	{
;;;171    		// Code TODO
;;;172    		EXTI_callback[1](EXTI_PR_PR1);
00000c  4806              LDR      r0,|L3.40|
00000e  6841              LDR      r1,[r0,#4]  ; EXTI_callback
000010  2002              MOVS     r0,#2
000012  4788              BLX      r1
;;;173    		
;;;174    		EXTI->PR |= EXTI_PR_PR1; // Clear EXTI0 pending interrupt
000014  4803              LDR      r0,|L3.36|
000016  6800              LDR      r0,[r0,#0]
000018  f0400002          ORR      r0,r0,#2
00001c  4901              LDR      r1,|L3.36|
00001e  6008              STR      r0,[r1,#0]
                  |L3.32|
;;;175    	}
;;;176    	
;;;177    }
000020  bd10              POP      {r4,pc}
;;;178    
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      0x40013c14
                  |L3.40|
                          DCD      EXTI_callback

                          AREA ||i.EXTI2_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI2_IRQHandler PROC
;;;183     */
;;;184    void EXTI2_IRQHandler(void){
000000  b510              PUSH     {r4,lr}
;;;185    	
;;;186    	if ((EXTI->PR & EXTI_PR_PR2) != 0)
000002  4808              LDR      r0,|L4.36|
000004  6800              LDR      r0,[r0,#0]
000006  f0000004          AND      r0,r0,#4
00000a  b148              CBZ      r0,|L4.32|
;;;187    	{
;;;188    		// Code TODO
;;;189    		EXTI_callback[2](EXTI_PR_PR2);
00000c  4806              LDR      r0,|L4.40|
00000e  6881              LDR      r1,[r0,#8]  ; EXTI_callback
000010  2004              MOVS     r0,#4
000012  4788              BLX      r1
;;;190    		
;;;191    		EXTI->PR |= EXTI_PR_PR2; // Clear EXTI0 pending interrupt
000014  4803              LDR      r0,|L4.36|
000016  6800              LDR      r0,[r0,#0]
000018  f0400004          ORR      r0,r0,#4
00001c  4901              LDR      r1,|L4.36|
00001e  6008              STR      r0,[r1,#0]
                  |L4.32|
;;;192    	}
;;;193    	
;;;194    }
000020  bd10              POP      {r4,pc}
;;;195    
                          ENDP

000022  0000              DCW      0x0000
                  |L4.36|
                          DCD      0x40013c14
                  |L4.40|
                          DCD      EXTI_callback

                          AREA ||i.EXTI3_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI3_IRQHandler PROC
;;;200     */
;;;201    void EXTI3_IRQHandler(void){
000000  b510              PUSH     {r4,lr}
;;;202    	
;;;203    	if ((EXTI->PR & EXTI_PR_PR3) != 0)
000002  4808              LDR      r0,|L5.36|
000004  6800              LDR      r0,[r0,#0]
000006  f0000008          AND      r0,r0,#8
00000a  b148              CBZ      r0,|L5.32|
;;;204    	{
;;;205    		// Code TODO
;;;206    		EXTI_callback[3](EXTI_PR_PR3);
00000c  4806              LDR      r0,|L5.40|
00000e  68c1              LDR      r1,[r0,#0xc]  ; EXTI_callback
000010  2008              MOVS     r0,#8
000012  4788              BLX      r1
;;;207    		
;;;208    		EXTI->PR |= EXTI_PR_PR3; // Clear EXTI0 pending interrupt
000014  4803              LDR      r0,|L5.36|
000016  6800              LDR      r0,[r0,#0]
000018  f0400008          ORR      r0,r0,#8
00001c  4901              LDR      r1,|L5.36|
00001e  6008              STR      r0,[r1,#0]
                  |L5.32|
;;;209    	}
;;;210    	
;;;211    }
000020  bd10              POP      {r4,pc}
;;;212    
                          ENDP

000022  0000              DCW      0x0000
                  |L5.36|
                          DCD      0x40013c14
                  |L5.40|
                          DCD      EXTI_callback

                          AREA ||i.EXTI4_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI4_IRQHandler PROC
;;;217     */
;;;218    void EXTI4_IRQHandler(void){
000000  b510              PUSH     {r4,lr}
;;;219    	
;;;220    	if ((EXTI->PR & EXTI_PR_PR4) != 0)
000002  4808              LDR      r0,|L6.36|
000004  6800              LDR      r0,[r0,#0]
000006  f0000010          AND      r0,r0,#0x10
00000a  b148              CBZ      r0,|L6.32|
;;;221    	{
;;;222    		// Code TODO
;;;223    		EXTI_callback[4](EXTI_PR_PR4);
00000c  4806              LDR      r0,|L6.40|
00000e  6901              LDR      r1,[r0,#0x10]  ; EXTI_callback
000010  2010              MOVS     r0,#0x10
000012  4788              BLX      r1
;;;224    		
;;;225    		EXTI->PR |= EXTI_PR_PR4; // Clear EXTI0 pending interrupt
000014  4803              LDR      r0,|L6.36|
000016  6800              LDR      r0,[r0,#0]
000018  f0400010          ORR      r0,r0,#0x10
00001c  4901              LDR      r1,|L6.36|
00001e  6008              STR      r0,[r1,#0]
                  |L6.32|
;;;226    	}
;;;227    	
;;;228    }
000020  bd10              POP      {r4,pc}
;;;229    
                          ENDP

000022  0000              DCW      0x0000
                  |L6.36|
                          DCD      0x40013c14
                  |L6.40|
                          DCD      EXTI_callback

                          AREA ||i.EXTI9_5_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI9_5_IRQHandler PROC
;;;234     */
;;;235    void EXTI9_5_IRQHandler(void){
000000  b510              PUSH     {r4,lr}
;;;236    	int i;
;;;237    	
;;;238    	for(i=5;i<=9;i++){
000002  2405              MOVS     r4,#5
000004  e014              B        |L7.48|
                  |L7.6|
;;;239    		if ((EXTI->PR & (0x1U << i)) != 0)
000006  480c              LDR      r0,|L7.56|
000008  6800              LDR      r0,[r0,#0]
00000a  2101              MOVS     r1,#1
00000c  40a1              LSLS     r1,r1,r4
00000e  4008              ANDS     r0,r0,r1
000010  b168              CBZ      r0,|L7.46|
;;;240    		{
;;;241    			// Code TODO
;;;242    			EXTI_callback[i]((0x1U << i));
000012  2201              MOVS     r2,#1
000014  fa02f004          LSL      r0,r2,r4
000018  4a08              LDR      r2,|L7.60|
00001a  f8521024          LDR      r1,[r2,r4,LSL #2]
00001e  4788              BLX      r1
;;;243    			
;;;244    			EXTI->PR |= (0x1U << i); // Clear EXTI0 pending interrupt
000020  4805              LDR      r0,|L7.56|
000022  6800              LDR      r0,[r0,#0]
000024  2101              MOVS     r1,#1
000026  40a1              LSLS     r1,r1,r4
000028  4308              ORRS     r0,r0,r1
00002a  4903              LDR      r1,|L7.56|
00002c  6008              STR      r0,[r1,#0]
                  |L7.46|
00002e  1c64              ADDS     r4,r4,#1              ;238
                  |L7.48|
000030  2c09              CMP      r4,#9                 ;238
000032  dde8              BLE      |L7.6|
;;;245    		}
;;;246    	}
;;;247    }
000034  bd10              POP      {r4,pc}
;;;248    
                          ENDP

000036  0000              DCW      0x0000
                  |L7.56|
                          DCD      0x40013c14
                  |L7.60|
                          DCD      EXTI_callback

                          AREA ||i.EXTI_Interrupt_Init||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  EXTI_Interrupt_Init PROC
;;;31      */
;;;32     void EXTI_Interrupt_Init(PinNameEnum PinId, TriggerModeEnum trig, void (*callback)(int)) 	
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;33     {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;34     	int IRQ_port_num,IRQ_pin_index;
;;;35     	
;;;36     //  IRQ_status = 0;
;;;37     	IRQ_port_num = GET_PORT_INDEX(PinId);
00000a  f3c51803          UBFX     r8,r5,#4,#4
;;;38     	IRQ_pin_index = GET_PIN_INDEX(PinId);	
00000e  f005040f          AND      r4,r5,#0xf
;;;39     
;;;40     		/* Check if line is already in use */
;;;41     	if (
000012  4888              LDR      r0,|L8.564|
000014  6800              LDR      r0,[r0,#0]
000016  2101              MOVS     r1,#1
000018  40a1              LSLS     r1,r1,r4
00001a  4008              ANDS     r0,r0,r1
00001c  b930              CBNZ     r0,|L8.44|
;;;42     		(EXTI->IMR & (0x01<<IRQ_pin_index)) || /* !< Interrupt already attached */
;;;43     		(EXTI->EMR & (0x01<<IRQ_pin_index))    /* !< Event already attached */
00001e  4885              LDR      r0,|L8.564|
000020  1d00              ADDS     r0,r0,#4
000022  6800              LDR      r0,[r0,#0]
000024  2101              MOVS     r1,#1
000026  40a1              LSLS     r1,r1,r4
000028  4008              ANDS     r0,r0,r1
00002a  b118              CBZ      r0,|L8.52|
                  |L8.44|
;;;44     	) {
;;;45     		/* Return error */
;;;46     		assert_failed(__FILE__,__LINE__);
00002c  212e              MOVS     r1,#0x2e
00002e  a082              ADR      r0,|L8.568|
000030  f7fffffe          BL       assert_failed
                  |L8.52|
;;;47     	}
;;;48     
;;;49     	// Enable SYSCFG clock
;;;50     	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
000034  4884              LDR      r0,|L8.584|
000036  6800              LDR      r0,[r0,#0]
000038  f4404080          ORR      r0,r0,#0x4000
00003c  4982              LDR      r1,|L8.584|
00003e  6008              STR      r0,[r1,#0]
;;;51     
;;;52     	SYSCFG->EXTICR[IRQ_pin_index/4] &= ~(0xF << (IRQ_pin_index%4)*4);
000040  17e2              ASRS     r2,r4,#31
000042  eb047292          ADD      r2,r4,r2,LSR #30
000046  1093              ASRS     r3,r2,#2
000048  4a80              LDR      r2,|L8.588|
00004a  f8522023          LDR      r2,[r2,r3,LSL #2]
00004e  4621              MOV      r1,r4
000050  17e3              ASRS     r3,r4,#31
000052  eb047393          ADD      r3,r4,r3,LSR #30
000056  109b              ASRS     r3,r3,#2
000058  eba40383          SUB      r3,r4,r3,LSL #2
00005c  ea4f0c83          LSL      r12,r3,#2
000060  230f              MOVS     r3,#0xf
000062  fa03f30c          LSL      r3,r3,r12
000066  439a              BICS     r2,r2,r3
000068  4620              MOV      r0,r4
00006a  17e3              ASRS     r3,r4,#31
00006c  eb047393          ADD      r3,r4,r3,LSR #30
000070  ea4f0ca3          ASR      r12,r3,#2
000074  4b75              LDR      r3,|L8.588|
000076  f843202c          STR      r2,[r3,r12,LSL #2]
;;;53       SYSCFG->EXTICR[IRQ_pin_index/4] |= (IRQ_port_num<<(IRQ_pin_index%4)*4);
00007a  17e2              ASRS     r2,r4,#31
00007c  eb047292          ADD      r2,r4,r2,LSR #30
000080  1093              ASRS     r3,r2,#2
000082  4a72              LDR      r2,|L8.588|
000084  f8522023          LDR      r2,[r2,r3,LSL #2]
000088  17e3              ASRS     r3,r4,#31
00008a  eb047393          ADD      r3,r4,r3,LSR #30
00008e  109b              ASRS     r3,r3,#2
000090  eba40383          SUB      r3,r4,r3,LSL #2
000094  009b              LSLS     r3,r3,#2
000096  fa08f303          LSL      r3,r8,r3
00009a  431a              ORRS     r2,r2,r3
00009c  17e3              ASRS     r3,r4,#31
00009e  eb047393          ADD      r3,r4,r3,LSR #30
0000a2  ea4f0ca3          ASR      r12,r3,#2
0000a6  4b69              LDR      r3,|L8.588|
0000a8  f843202c          STR      r2,[r3,r12,LSL #2]
;;;54     
;;;55     	/* Clear first */
;;;56     	EXTI->FTSR &= ~(0x01<<IRQ_pin_index);
0000ac  4861              LDR      r0,|L8.564|
0000ae  300c              ADDS     r0,r0,#0xc
0000b0  6800              LDR      r0,[r0,#0]
0000b2  2101              MOVS     r1,#1
0000b4  40a1              LSLS     r1,r1,r4
0000b6  4388              BICS     r0,r0,r1
0000b8  495e              LDR      r1,|L8.564|
0000ba  310c              ADDS     r1,r1,#0xc
0000bc  6008              STR      r0,[r1,#0]
;;;57     	EXTI->RTSR &= ~(0x01<<IRQ_pin_index);
0000be  1f08              SUBS     r0,r1,#4
0000c0  6800              LDR      r0,[r0,#0]
0000c2  2101              MOVS     r1,#1
0000c4  40a1              LSLS     r1,r1,r4
0000c6  4388              BICS     r0,r0,r1
0000c8  495a              LDR      r1,|L8.564|
0000ca  3108              ADDS     r1,r1,#8
0000cc  6008              STR      r0,[r1,#0]
;;;58     
;;;59     	switch(trig){
0000ce  b136              CBZ      r6,|L8.222|
0000d0  2e01              CMP      r6,#1
0000d2  d00c              BEQ      |L8.238|
0000d4  2e02              CMP      r6,#2
0000d6  d014              BEQ      |L8.258|
0000d8  2e03              CMP      r6,#3
0000da  d12e              BNE      |L8.314|
0000dc  e01b              B        |L8.278|
                  |L8.222|
;;;60     		case None:
;;;61     			EXTI->IMR &= ~(1<<IRQ_pin_index);
0000de  4855              LDR      r0,|L8.564|
0000e0  6801              LDR      r1,[r0,#0]
0000e2  2001              MOVS     r0,#1
0000e4  40a0              LSLS     r0,r0,r4
0000e6  4381              BICS     r1,r1,r0
0000e8  4852              LDR      r0,|L8.564|
0000ea  6001              STR      r1,[r0,#0]
;;;62     		break;
0000ec  e02b              B        |L8.326|
                  |L8.238|
;;;63     		case Rising:
;;;64     			EXTI->RTSR|= (1<<IRQ_pin_index);
0000ee  4851              LDR      r0,|L8.564|
0000f0  3008              ADDS     r0,r0,#8
0000f2  6801              LDR      r1,[r0,#0]
0000f4  2001              MOVS     r0,#1
0000f6  40a0              LSLS     r0,r0,r4
0000f8  4301              ORRS     r1,r1,r0
0000fa  484e              LDR      r0,|L8.564|
0000fc  3008              ADDS     r0,r0,#8
0000fe  6001              STR      r1,[r0,#0]
;;;65     		break;
000100  e021              B        |L8.326|
                  |L8.258|
;;;66     		case Falling:
;;;67     			EXTI->FTSR|= (1<<IRQ_pin_index);
000102  484c              LDR      r0,|L8.564|
000104  300c              ADDS     r0,r0,#0xc
000106  6800              LDR      r0,[r0,#0]
000108  2101              MOVS     r1,#1
00010a  40a1              LSLS     r1,r1,r4
00010c  4308              ORRS     r0,r0,r1
00010e  4949              LDR      r1,|L8.564|
000110  310c              ADDS     r1,r1,#0xc
000112  6008              STR      r0,[r1,#0]
;;;68     		break;
000114  e017              B        |L8.326|
                  |L8.278|
;;;69     		case RisingAndFalling:
;;;70     			EXTI->RTSR|= (1<<IRQ_pin_index);
000116  4847              LDR      r0,|L8.564|
000118  3008              ADDS     r0,r0,#8
00011a  6800              LDR      r0,[r0,#0]
00011c  2101              MOVS     r1,#1
00011e  40a1              LSLS     r1,r1,r4
000120  4308              ORRS     r0,r0,r1
000122  4944              LDR      r1,|L8.564|
000124  3108              ADDS     r1,r1,#8
000126  6008              STR      r0,[r1,#0]
;;;71     			EXTI->FTSR|= (1<<IRQ_pin_index);
000128  1d08              ADDS     r0,r1,#4
00012a  6800              LDR      r0,[r0,#0]
00012c  2101              MOVS     r1,#1
00012e  40a1              LSLS     r1,r1,r4
000130  4308              ORRS     r0,r0,r1
000132  4940              LDR      r1,|L8.564|
000134  310c              ADDS     r1,r1,#0xc
000136  6008              STR      r0,[r1,#0]
;;;72     		break;
000138  e005              B        |L8.326|
                  |L8.314|
;;;73     		default:
;;;74     		/* Return error */
;;;75     #ifdef _DEBUG
;;;76     			printf(" !!!ERROR!!! line=%d file=%s\n", __LINE__, __FILE__);
00013a  a23f              ADR      r2,|L8.568|
00013c  214c              MOVS     r1,#0x4c
00013e  a044              ADR      r0,|L8.592|
000140  f7fffffe          BL       __2printf
;;;77     #endif
;;;78     		break;
000144  bf00              NOP      
                  |L8.326|
000146  bf00              NOP                            ;62
;;;79     	}
;;;80     
;;;81     	/* set by default */
;;;82     	EXTI->IMR |= (1<<IRQ_pin_index);
000148  483a              LDR      r0,|L8.564|
00014a  6800              LDR      r0,[r0,#0]
00014c  2101              MOVS     r1,#1
00014e  40a1              LSLS     r1,r1,r4
000150  4308              ORRS     r0,r0,r1
000152  4938              LDR      r1,|L8.564|
000154  6008              STR      r0,[r1,#0]
;;;83     	
;;;84     	//Connect the pin to external interrupt line
;;;85     	switch(IRQ_pin_index){
000156  2c10              CMP      r4,#0x10
000158  d25f              BCS      |L8.538|
00015a  e8dff004          TBB      [pc,r4]
00015e  0813              DCB      0x08,0x13
000160  1e29343f          DCB      0x1e,0x29,0x34,0x3f
000164  40414243          DCB      0x40,0x41,0x42,0x43
000168  4e4f5051          DCB      0x4e,0x4f,0x50,0x51
00016c  5253              DCB      0x52,0x53
;;;86     		case 0:
;;;87     			NVIC_SetPriority(EXTI0_IRQn,3);
00016e  2103              MOVS     r1,#3
000170  2006              MOVS     r0,#6
000172  f7fffffe          BL       __NVIC_SetPriority
;;;88     		  NVIC_ClearPendingIRQ(EXTI0_IRQn);
000176  2006              MOVS     r0,#6
000178  f7fffffe          BL       __NVIC_ClearPendingIRQ
;;;89     		  NVIC_EnableIRQ(EXTI0_IRQn);
00017c  2006              MOVS     r0,#6
00017e  f7fffffe          BL       __NVIC_EnableIRQ
;;;90     			break;
000182  e050              B        |L8.550|
;;;91     		case 1:
;;;92     			NVIC_SetPriority(EXTI1_IRQn,3);
000184  2103              MOVS     r1,#3
000186  2007              MOVS     r0,#7
000188  f7fffffe          BL       __NVIC_SetPriority
;;;93     		  NVIC_ClearPendingIRQ(EXTI1_IRQn);
00018c  2007              MOVS     r0,#7
00018e  f7fffffe          BL       __NVIC_ClearPendingIRQ
;;;94     		  NVIC_EnableIRQ(EXTI1_IRQn);
000192  2007              MOVS     r0,#7
000194  f7fffffe          BL       __NVIC_EnableIRQ
;;;95     			break;
000198  e045              B        |L8.550|
;;;96         case 2:
;;;97     			NVIC_SetPriority(EXTI2_IRQn,3);
00019a  2103              MOVS     r1,#3
00019c  2008              MOVS     r0,#8
00019e  f7fffffe          BL       __NVIC_SetPriority
;;;98     		  NVIC_ClearPendingIRQ(EXTI2_IRQn);
0001a2  2008              MOVS     r0,#8
0001a4  f7fffffe          BL       __NVIC_ClearPendingIRQ
;;;99     		  NVIC_EnableIRQ(EXTI2_IRQn);
0001a8  2008              MOVS     r0,#8
0001aa  f7fffffe          BL       __NVIC_EnableIRQ
;;;100    			break;
0001ae  e03a              B        |L8.550|
;;;101    		case 3:
;;;102    			NVIC_SetPriority(EXTI3_IRQn,3);
0001b0  2103              MOVS     r1,#3
0001b2  2009              MOVS     r0,#9
0001b4  f7fffffe          BL       __NVIC_SetPriority
;;;103    		  NVIC_ClearPendingIRQ(EXTI3_IRQn);
0001b8  2009              MOVS     r0,#9
0001ba  f7fffffe          BL       __NVIC_ClearPendingIRQ
;;;104    		  NVIC_EnableIRQ(EXTI3_IRQn);
0001be  2009              MOVS     r0,#9
0001c0  f7fffffe          BL       __NVIC_EnableIRQ
;;;105    			break;		
0001c4  e02f              B        |L8.550|
;;;106    		case 4:
;;;107    			NVIC_SetPriority(EXTI4_IRQn,3);
0001c6  2103              MOVS     r1,#3
0001c8  200a              MOVS     r0,#0xa
0001ca  f7fffffe          BL       __NVIC_SetPriority
;;;108    		  NVIC_ClearPendingIRQ(EXTI4_IRQn);
0001ce  200a              MOVS     r0,#0xa
0001d0  f7fffffe          BL       __NVIC_ClearPendingIRQ
;;;109    		  NVIC_EnableIRQ(EXTI4_IRQn);
0001d4  200a              MOVS     r0,#0xa
0001d6  f7fffffe          BL       __NVIC_EnableIRQ
;;;110    			break;		
0001da  e024              B        |L8.550|
;;;111    		case 5:
;;;112        case 6:
0001dc  bf00              NOP      
;;;113    		case 7:
0001de  bf00              NOP      
;;;114    		case 8:
0001e0  bf00              NOP      
;;;115    		case 9:
0001e2  bf00              NOP      
;;;116    			NVIC_SetPriority(EXTI9_5_IRQn,3);
0001e4  2103              MOVS     r1,#3
0001e6  2017              MOVS     r0,#0x17
0001e8  f7fffffe          BL       __NVIC_SetPriority
;;;117    		  NVIC_ClearPendingIRQ(EXTI9_5_IRQn);
0001ec  2017              MOVS     r0,#0x17
0001ee  f7fffffe          BL       __NVIC_ClearPendingIRQ
;;;118    		  NVIC_EnableIRQ(EXTI9_5_IRQn);
0001f2  2017              MOVS     r0,#0x17
0001f4  f7fffffe          BL       __NVIC_EnableIRQ
;;;119    			break;
0001f8  e015              B        |L8.550|
;;;120        case 10:
;;;121    		case 11:
0001fa  bf00              NOP      
;;;122    		case 12:
0001fc  bf00              NOP      
;;;123    		case 13:
0001fe  bf00              NOP      
;;;124        case 14:
000200  bf00              NOP      
;;;125    		case 15:
000202  bf00              NOP      
;;;126    			NVIC_SetPriority(EXTI15_10_IRQn,3);
000204  2103              MOVS     r1,#3
000206  2028              MOVS     r0,#0x28
000208  f7fffffe          BL       __NVIC_SetPriority
;;;127    		  NVIC_ClearPendingIRQ(EXTI15_10_IRQn);
00020c  2028              MOVS     r0,#0x28
00020e  f7fffffe          BL       __NVIC_ClearPendingIRQ
;;;128    		  NVIC_EnableIRQ(EXTI15_10_IRQn);
000212  2028              MOVS     r0,#0x28
000214  f7fffffe          BL       __NVIC_EnableIRQ
;;;129    			break;
000218  e005              B        |L8.550|
                  |L8.538|
;;;130    		default:
;;;131    		/* Return error */
;;;132    #ifdef _DEBUG
;;;133    			printf(" !!!ERROR!!! line=%d file=%s\n", __LINE__, __FILE__);
00021a  a207              ADR      r2,|L8.568|
00021c  2185              MOVS     r1,#0x85
00021e  a00c              ADR      r0,|L8.592|
000220  f7fffffe          BL       __2printf
;;;134    #endif
;;;135    		break;
000224  bf00              NOP      
                  |L8.550|
000226  bf00              NOP                            ;90
;;;136    	}
;;;137    
;;;138    // Registering CallBack function
;;;139    	EXTI_callback[IRQ_pin_index]=callback;
000228  4811              LDR      r0,|L8.624|
00022a  f8407024          STR      r7,[r0,r4,LSL #2]
;;;140    
;;;141    // LBR Not needed		__enable_irq(); // ; Enable IRQ by clearing PRIMASK
;;;142    
;;;143    }
00022e  e8bd81f0          POP      {r4-r8,pc}
;;;144    
                          ENDP

000232  0000              DCW      0x0000
                  |L8.564|
                          DCD      0x40013c00
                  |L8.568|
000238  5372635c          DCB      "Src\\interrupt.c",0
00023c  696e7465
000240  72727570
000244  742e6300
                  |L8.584|
                          DCD      0x40023844
                  |L8.588|
                          DCD      0x40013808
                  |L8.592|
000250  20212121          DCB      " !!!ERROR!!! line=%d file=%s\n",0
000254  4552524f
000258  52212121
00025c  206c696e
000260  653d2564
000264  2066696c
000268  653d2573
00026c  0a00    
00026e  00                DCB      0
00026f  00                DCB      0
                  |L8.624|
                          DCD      EXTI_callback

                          AREA ||i.__NVIC_ClearPendingIRQ||, CODE, READONLY, ALIGN=2

                  __NVIC_ClearPendingIRQ PROC
;;;1769    */
;;;1770   __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
000000  2800              CMP      r0,#0
;;;1771   {
;;;1772     if ((int32_t)(IRQn) >= 0)
000002  db07              BLT      |L9.20|
;;;1773     {
;;;1774       NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
000004  f000021f          AND      r2,r0,#0x1f
000008  2101              MOVS     r1,#1
00000a  4091              LSLS     r1,r1,r2
00000c  4a02              LDR      r2,|L9.24|
00000e  0943              LSRS     r3,r0,#5
000010  f8421023          STR      r1,[r2,r3,LSL #2]
                  |L9.20|
;;;1775     }
;;;1776   }
000014  4770              BX       lr
;;;1777   
                          ENDP

000016  0000              DCW      0x0000
                  |L9.24|
                          DCD      0xe000e280

                          AREA ||i.__NVIC_EnableIRQ||, CODE, READONLY, ALIGN=1

                  __NVIC_EnableIRQ PROC
;;;1678    */
;;;1679   __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
000000  2800              CMP      r0,#0
;;;1680   {
;;;1681     if ((int32_t)(IRQn) >= 0)
000002  db0d              BLT      |L10.32|
;;;1682     {
;;;1683       __COMPILER_BARRIER();
000004  bf00              NOP      
000006  bf00              NOP      
;;;1684       NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
000008  f000021f          AND      r2,r0,#0x1f
00000c  2101              MOVS     r1,#1
00000e  4091              LSLS     r1,r1,r2
000010  0942              LSRS     r2,r0,#5
000012  0092              LSLS     r2,r2,#2
000014  f10222e0          ADD      r2,r2,#0xe000e000
000018  f8c21100          STR      r1,[r2,#0x100]
;;;1685       __COMPILER_BARRIER();
00001c  bf00              NOP      
00001e  bf00              NOP      
                  |L10.32|
;;;1686     }
;;;1687   }
000020  4770              BX       lr
;;;1688   
                          ENDP


                          AREA ||i.__NVIC_SetPriority||, CODE, READONLY, ALIGN=2

                  __NVIC_SetPriority PROC
;;;1808    */
;;;1809   __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
000000  b510              PUSH     {r4,lr}
;;;1810   {
;;;1811     if ((int32_t)(IRQn) >= 0)
000002  2800              CMP      r0,#0
000004  db04              BLT      |L11.16|
;;;1812     {
;;;1813       NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
000006  070a              LSLS     r2,r1,#28
000008  0e13              LSRS     r3,r2,#24
00000a  4a05              LDR      r2,|L11.32|
00000c  5413              STRB     r3,[r2,r0]
00000e  e006              B        |L11.30|
                  |L11.16|
;;;1814     }
;;;1815     else
;;;1816     {
;;;1817       SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
000010  070a              LSLS     r2,r1,#28
000012  0e14              LSRS     r4,r2,#24
000014  4a03              LDR      r2,|L11.36|
000016  f000030f          AND      r3,r0,#0xf
00001a  1f1b              SUBS     r3,r3,#4
00001c  54d4              STRB     r4,[r2,r3]
                  |L11.30|
;;;1818     }
;;;1819   }
00001e  bd10              POP      {r4,pc}
;;;1820   
                          ENDP

                  |L11.32|
                          DCD      0xe000e400
                  |L11.36|
                          DCD      0xe000ed18

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  EXTI_callback
                          %        64

;*** Start embedded assembler ***

#line 1 "Src\\interrupt.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_interrupt_c_6e080258____REV16|
#line 492 "D:\\Users\\Laurent\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.6.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___11_interrupt_c_6e080258____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_interrupt_c_6e080258____REVSH|
#line 507
|__asm___11_interrupt_c_6e080258____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_interrupt_c_6e080258____RRX|
#line 694
|__asm___11_interrupt_c_6e080258____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
